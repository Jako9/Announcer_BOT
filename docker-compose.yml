version: "3.3"

services:
    db:
        image: mysql
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        volumes:
            - ./docker/mysql:/docker-entrypoint-initdb.d
        environment:
            MYSQL_ROOT_PASSWORD: ${DBROOT}
            MYSQL_DATABASE: ${DBNAME}
            MYSQL_USER: ${DBUSER}
            MYSQL_PASSWORD: ${DBPASSWORD}

    webserver:
        image: nginx
        volumes:
            - ./config/statistics/:/announcer/statistics
            - ./resources/:/resources
            - ./logs/:/announcer/logs
            - ./web:/code
            - ./docker/nginx/:/etc/nginx/conf.d/
            - /var/run/docker.sock:/var/run/docker.sock
        ports:
            - 80:80
        links:
            - php
    

    php:
        depends_on:
            - db
        build: ./docker/php
        volumes:
            - ./resources/:/announcer/resources
            - ./config/statistics/:/announcer/statistics
            - ./logs/:/announcer/logs
            - /var/run/docker.sock:/var/run/docker.sock
            - ./web:/code
        environment:
            - LOGIN=${WEBUSER}
            - PASSWORD=${WEBPASSWORD}
            - DBUSER=${DBUSER}
            - DBPASSWORD=${DBPASSWORD}
            - DBNAME=${DBNAME}

    phpmyadmin:
        depends_on:
            - db
        image: phpmyadmin/phpmyadmin
        restart: always
        ports:
            - '8081:80'
        environment:
            PMA_HOST: db
            MYSQL_ROOT_PASSWORD: ${DBROOT}

    node:
        build: .
        ports: 
            - 3000:3000
        depends_on: 
            - db
        restart: always
        volumes:
            - ./resources/:/announcer/resources
            - ./config/statistics/:/announcer/statistics
            - ./logs/:/announcer/logs
        environment:
            - DBUSER=${DBUSER}
            - DBPASSWORD=${DBPASSWORD}
            - BOTKEY=${BOTKEY}
            - DBNAME=${DBNAME}