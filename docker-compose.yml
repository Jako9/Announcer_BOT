version: "3.3"

services:
    db:
        image: ${DBIMAGE}
        restart: always
        volumes:
            - ./docker/mysql/data:/var/lib/mysql
            - ./docker/mysql/setup.sql:/docker-entrypoint-initdb.d/init.sql
            - ./docker/mysql/init.cnf:/etc/mysql/my.cnf
        environment:
            MYSQL_ROOT_PASSWORD: ${DBROOT}
            MYSQL_DATABASE: ${DBNAME}
            MYSQL_USER: ${DBUSER}
            MYSQL_PASSWORD: ${DBPASSWORD}


    webserver:
        build: ./web
        depends_on: 
            - db
        restart: always
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./resources/:/web/resources
            - ./config/statistics/:/web/statistics
            - ./logs/:/web/logs
            - ./web/src/:/web/code
            - ./:/web/gitCopy
        environment:
            - DBUSER=${DBUSER}
            - DBPASSWORD=${DBPASSWORD}
            - DBNAME=${DBNAME}
            - WEBUSER=${WEBUSER}
            - WEBPASSWORD=${WEBPASSWORD}
            - BRANCH=${BRANCH}
    
    phpmyadmin:
        depends_on:
            - db
        image: jackgruber/phpmyadmin
        restart: always
        ports:
            - '${PHPMYADMINPORT}:80'
        environment:
            PMA_HOST: db
            MYSQL_ROOT_PASSWORD: ${DBROOT}

    node:
        build: .
        depends_on: 
            - db
        restart: always
        ports:
            - '${NODEPORT}:3000'
            - '3443:3443'
        volumes:
            - ./resources/:/announcer/resources
            - ./config/statistics/:/announcer/statistics
            - ./logs/:/announcer/logs
            - ./src/:/announcer/code
            - ./web/src/https/:/https
        environment:
            - DBUSER=${DBUSER}
            - DBPASSWORD=${DBPASSWORD}
            - BOTKEY=${BOTKEY}
            - DBNAME=${DBNAME}
